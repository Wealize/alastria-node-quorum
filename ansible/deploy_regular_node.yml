---

- hosts: all
  remote_user: '{{ remote_user }}'
  environment:
    PATH: /usr/local/go/bin:{{ ansible_env.PATH }}

  tasks:
    - name: Add the deploy user
      become: yes
      user:
        name: '{{ deploy_user }}'
        state: present
    
    - name: Install dependencies
      become: yes
      package:
        name:
          - git
          - curl
          - dnsutils
          - net-tools
          - logrotate
          - software-properties-common
          - unzip
          - wget
          - make
          - gcc
          - libsodium-dev
          - build-essential
          - libdb-dev
          - zlib1g-dev
          - libtinfo-dev
          - sysvbanner
          - psmisc
          - libleveldb-dev
          - libsodium-dev
          - libdb5.3-dev
          - dnsutils
        state: latest

    - name: Install Golang compiler
      become: yes
      unarchive:
        src: https://storage.googleapis.com/golang/'{{ golang_version }}'
        dest: /usr/local/
        remote_src: yes

    - name: Install Quorum
      become: yes
      block:
        - name: Clone Quorum repository
          git:
            repo: https://github.com/ConsenSys/quorum.git
            dest: /tmp/quorum
            version: '{{ quorum_version }}'
        - name: Execute make command
          shell: make -C /tmp/quorum all
        - name: Copy geth to right location
          copy:
            src: /tmp/quorum/build/bin/geth
            dest: /usr/local/bin/geth
        - name: Copy bootnode to right location
          copy:
            src: /tmp/quorum/build/bin/bootnode
            dest: /usr/local/bin/bootnode

    - name: Check that the INITIALIZED file exists
        stat:
          path: ~/data/INITIALIZED
        register: INITIALIZED

    - name: Initialize the node if necessary
      become: yes
      become_user: '{{ deploy_user }}'
      when: not INITIALIZED.stat.exists
      block:
        - name: Create the data directory if it does not exist yet
          file:
            path: ~/data
            state: directory

        - name: Create the nodekey
          shell: /usr/local/bin/bootnode -genkey ~/data/nodekey

        - name: Get the enode key
          shell: /usr/local/bin/bootnode -nodekey ~/data/nodekey -writeaddress > ~/data/ENODE_ADDRESS

        - name: Download genesis.json
          get_url:
            url: '{{ genesis_json_url }}'
            dest: ~/genesis.json

        - name: Execute geth command
          shell: /usr/local/bin/geth --datadir ~/data init ~/genesis.json
        
        - name: Mark the node as initialized
          shell: /bin/echo "INITIALIZED" > ~/data/INITIALIZED

    - name: 'Get nodes and start geth node'
      become: yes
      become_user: '{{ deploy_user }}'
      block:
        - name: Create temporary file
          tempfile:
            path: /tmp/updatePerm.XXXXXX
          register: TMPFILE
        - name: Create the data directory if it does not exist yet
          shell: |
            for i in boot-nodes.json validator-nodes.json regular-nodes.json ; do
              wget -q -O ~/env/${i} https://raw.githubusercontent.com/alastria/alastria-node/${NODE_BRANCH}/data/${i}
            done
